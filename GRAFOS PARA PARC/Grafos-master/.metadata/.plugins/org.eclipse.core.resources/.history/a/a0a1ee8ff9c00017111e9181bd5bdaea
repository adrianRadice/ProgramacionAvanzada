package grafo;

import java.util.Arrays;

public class GrafoDirigido {
	private int[][] matriz;
	private int valorInfinito;
	
	public GrafoDirigido(final int cantidadDeNodos,final int valorInfinito) {
		matriz = new int[cantidadDeNodos][cantidadDeNodos];
		for (int i = 0; i < matriz.length; i++) {
			for(int j=0; j<  matriz[0].length; j++)
			{
				matriz[i][j]=valorInfinito;
			}
		}
	}
	
	public void setConexion(Arista arista) throws Exception {
		matriz[arista.getNodoInicial().getNumero()][arista.getNodoFinal().getNumero()]=arista.getPeso();
	}
	
	public Arista getArista(Nodo nodoInicial, Nodo nodoFinal) throws Exception {
		int distancia = matriz[nodoInicial.getNumero()][nodoFinal.getNumero()];
		if(distancia == valorInfinito)
			return null;
		else
			return new Arista(nodoInicial,nodoFinal,distancia);
	}
	
	public int getCantidadDeNodos() {
		return matriz[0].length;
	}

	public void imprimir() {
		for (int i = 0; i < matriz.length; i++) {
			for(int j=0; j< matriz[0].length; j++)
			{
				if(matriz[i][j]<=valorInfinito)
					System.out.print("-");
				else
					System.out.print(matriz[i][j]);
				
			}
			System.out.println();
		}
	}

	public int getValorInfinito()
	{
		return this.valorInfinito;
	}
}
